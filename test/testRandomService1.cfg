process TEST1 = {

  // The RandomNumberGeneratorService should work
  // with any kind of source
  source  = EmptySource { }

  untracked PSet maxEvents = {
    untracked int32 input = 5
  }

  service = RandomNumberGeneratorService {

    // If the source generates random numbers, then
    // supply a seed for the source.  (EmptySource
    // does not, so we do not really need this here)
    // Internally, supplying a seed causes the service
    // to create one engine for the source.

    PSet theSource = {
      untracked vuint32 initialSeedSet = { 7, 11 }
      untracked string engineName = "RanecuEngine"
    }

    // Tell the service to save the state of all engines.
#   untracked string saveFileName    = "StashState.data"

    // HepJamesRandom requires one seed between 0 and 900000000
    // RanecuEngine requires two seeds between 0 and 2147483647

    // Modules are handled in an analogous way.  The only 
    // difference being there can be more than one so there
    // is a parameter set to handle each of the three cases.
    // You need to specify seeds for all modules that request
    // random engines from the service (and only those modules
    // unless you want to waste a little CPU and memory).

    PSet t1 = {
      untracked uint32 initialSeed = 81
    }

    PSet t2 = {
      untracked string engineName = "RanecuEngine"
      untracked vuint32 initialSeedSet = {1,2}
    }

    PSet t3 = {
      untracked uint32 initialSeed = 83
      untracked string engineName = "TRandom3"
    }

    PSet t4 = {
      untracked uint32 initialSeed = 84
    }

  }

  module t1 = TestRandomNumberServiceAnalyzer { }
  module t2 = TestRandomNumberServiceAnalyzer { }
  module t3 = TestRandomNumberServiceAnalyzer { }
  module t4 = TestRandomNumberServiceAnalyzer { }

  // If you do not want to save the state of the random engines
  // leave this line out.
  // Including this producer causes the states to be stored
  // in the event.  The label used here must be referenced
  // in a later process to restore the state of the engines.
  module randomEngineStateProducer = RandomEngineStateProducer { }

  path p = {t1 & t2 & t3 & t4 & randomEngineStateProducer }

  module out = PoolOutputModule {
    untracked string fileName = "testRandomService1.root" 
  }

  endpath o = { out }
}
