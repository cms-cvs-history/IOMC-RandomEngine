service = RandomNumberGeneratorService
{

# to save the status of the last event (useful for crashes)

   untracked string saveFileName    = ""     

# to restore the status of the last event, 
# comment the line above and decomment the following one

#   untracked string restoreFileName = "RandomEngineState.log"  

# to reproduce events using the RandomEngineStateProducer (source excluded),
# comment the sourceSeed definition, decomment the following one

#   untracked string restoreStateLabel = "randomEngineStateProducer"

   PSet theSource = {
       untracked uint32 initialSeed = 123456789
       untracked string engineName = "HepJamesRandom"
   }
   PSet VtxSmeared = {
       untracked uint32 initialSeed = 98765432
       untracked string engineName = "HepJamesRandom"
   }
   PSet g4SimHits = {
       untracked uint32 initialSeed = 11
       untracked string engineName = "HepJamesRandom"
   }
   PSet mix = {
       untracked uint32 initialSeed = 12345
       untracked string engineName = "HepJamesRandom"
   }
   PSet simSiPixelDigis = {
       untracked uint32 initialSeed = 1234567
       untracked string engineName = "HepJamesRandom"
   }
   PSet simSiStripDigis = {
       untracked uint32 initialSeed = 1234567
       untracked string engineName = "HepJamesRandom"
   }
   PSet simECalUnsuppressedDigis = {
       untracked uint32 initialSeed = 1234567
       untracked string engineName = "HepJamesRandom"
   }
   PSet simHCalUnsuppressedDigis = {
       untracked uint32 initialSeed = 11223344
       untracked string engineName = "HepJamesRandom"
   }
   PSet simMuonCSCDigis = {
       untracked uint32 initialSeed = 11223344
       untracked string engineName = "HepJamesRandom"
   }
   PSet simMuonDTDigis = {
       untracked uint32 initialSeed = 1234567
       untracked string engineName = "HepJamesRandom"
   }
   PSet simMuonRPCDigis = {
       untracked uint32 initialSeed = 1234567
       untracked string engineName = "HepJamesRandom"
   }
}            

module randomEngineStateProducer = RandomEngineStateProducer { }

